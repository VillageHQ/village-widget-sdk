.village-iframe {
  width: 100%;
  height: 100%;
  border: none;
  display: block;
  position: fixed;
  top: 0;
  left: 0;
  z-index: 2147483647;
  background: rgba(0, 0, 0, 0.24);
  color-scheme: light;

  &.village-loading {
    display: flex;
    justify-content: center;
    align-items: center;
  }

  > .village-spinner {
    width: 1.5rem;
    height: 1.5rem;
    border: 2px solid #000;
    border-left-color: transparent;
    border-bottom-color: transparent;
    border-radius: 50%;
    animation: spin 0.45s linear infinite;
  }

  &.village-hidden {
    display: none;
  }
}

@keyframes spin {
  0% {
    transform: rotate(0deg);
  }
  100% {
    transform: rotate(360deg);
  }
}

.village-hidden {
  display: none;
}

[village-paths-data="facepiles"] {
  display: flex;
  align-items: center;
  padding-right: 0.5rem;
}

[village-paths-data="facepiles"] img {
  width: 1.5rem;
  height: 1.5rem;
  border-radius: 50%;
  margin-right: -0.5rem; /* Creates overlap effect */
}

[village-paths-data="facepiles"] img.village-facepiler-avatar-not-found {
  filter: blur(7px);
}

[village-paths-data="facepiles"] img:last-child {
  margin-right: 0;
}

[village-paths-data="count"] {
  padding-right: 0.25rem;
}

/* Critical: Hide deprecated error state immediately on page load */
[village-paths-availability="error"] {
  display: none !important;
}

/* Hide all states except loading by default */
[village-paths-availability="found"],
[village-paths-availability="not-found"],
[village-paths-availability="not-activated"] {
  display: none !important;
}

/* Show loading state by default until SDK determines actual state */
[village-paths-availability="loading"] {
  display: inline-flex !important;
}

/* SDK will explicitly override these with inline styles */
